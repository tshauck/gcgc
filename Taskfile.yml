version: "3"

env:
  GCGC_VERSION: v0.12.3

tasks:
  ci-test:
    cmds:
      - task: build
      - task: black-check
      - task: pydocstyle
      - task: pylint
      - task: test
  build:
    cmds:
      - docker-compose build gcgc
  black-check:
    cmds:
      - docker-compose run gcgc black --check .
  pydocstyle:
    cmds:
      - docker-compose run gcgc pydocstyle --add-ignore=D202,D203,D301 --convention=google gcgc
  pylint:
    cmds:
      - docker-compose run gcgc pylint gcgc
  test:
    cmds:
      - docker-compose run gcgc pytest --strict --doctest-modules -v -s --cov-report term-missing --cov=gcgc
  gh-release:
    cmds:
      - python -m pip install --pre -U commitizen
      - cz ch --start-rev {{ .LAST_TAG }}
      - gh release create {{ .CURRENT_TAG }} -F CHANGELOG.md
    vars:
      LAST_TAG:
        sh: git tag --sort=-v:refname | grep 'v\d\{1,2\}\.\d\{1,2\}\.\d\{1,2\}$' | head -n 2 | tail -n 1
      CURRENT_TAG:
        sh: git tag --sort=-v:refname | grep 'v\d\{1,2\}\.\d\{1,2\}\.\d\{1,2\}$' | head -n 1
    env:
      GITHUB_TOKEN:
        sh: echo "$GITHUB_TOKEN"
  publish:
    cmds:
      - python -m pip install --pre -U poetry twine
      - poetry install
      - poetry build
      - twine upload dist/*
    env:
      TWINE_USERNAME:
        sh: echo "$TWINE_USERNAME"
      TWIN_PASSWORD:
        sh: echo "$TWINE_PASSWORD"
